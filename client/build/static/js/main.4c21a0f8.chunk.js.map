{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","loader","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","err","text","amount","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","convertCurrency","Number","toLocaleString","style","currency","Balance","useContext","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","length","htmlFor","onChange","e","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c21a0f8.chunk.js","sourcesContent":["const Header = () => {\r\n\r\n    return (\r\n        <header>\r\n            <h2>Expense Tracker</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS': \r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION': \r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION': \r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n            case 'TRANSACTION_ERROR':\r\n                return {\r\n                    ...state,\r\n                    error: action.payload\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n\r\n// Initial state\r\n    const initialState = {\r\n        transactions: [],\r\n        error: null,\r\n        loader: true\r\n    }\r\n\r\n// Create global context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    // Actions\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/transactions')\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            axios.delete(`/api/transactions/${id}`)\r\n            \r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    async function addTransaction(id, text, amount) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/transactions', {text, amount}, config)\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }  \r\n    }\r\n\r\n    function convertCurrency(amount)  {\r\n        return Number(amount).toLocaleString('en-US', { style: 'currency', currency: 'USD'})\r\n     }\r\n\r\n    return (\r\n        <GlobalContext.Provider value= {{\r\n            transactions: state.transactions,\r\n            loading: state.loading,\r\n            error: state.error,\r\n            getTransactions,\r\n            deleteTransaction,\r\n            addTransaction,\r\n            convertCurrency\r\n        }} >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n    const { transactions, convertCurrency } = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const total = amounts.reduce((acc, item) => (acc+= item), 0).toFixed(2);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n           <h4>Your Balance</h4> \r\n           <h1>{convertCurrency(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n \r\n\r\nconst IncomeExpenses = () => {\r\n\r\n  const { transactions, convertCurrency } = useContext(GlobalContext)\r\n  const amounts = transactions.map(transaction => transaction.amount)\r\n  \r\n  const income = amounts\r\n  .filter(item => item > 0)\r\n  .reduce((acc, item) => (acc += item), 0)\r\n  .toFixed(2);\r\n\r\n  const expense = (\r\n      amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n      -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">+{convertCurrency(income)}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">-{convertCurrency(expense)}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Transaction = ({transaction}) => {\r\n  const { deleteTransaction, convertCurrency } = useContext(GlobalContext)\r\n \r\n    return (\r\n        <li className={transaction.amount < 0 ? \"minus\": \"plus\" }>\r\n            {transaction.text} <span>{convertCurrency(transaction.amount)}</span>\r\n            <button onClick={()=> (deleteTransaction(transaction._id))} className=\"delete-btn\">\r\n                x\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n    useEffect( () => {\r\n        getTransactions()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction._id} transaction={transaction} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n    const { transactions, addTransaction } = useContext(GlobalContext)\r\n\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n\r\n    const newTransaction = (event) => {\r\n        event.preventDefault()\r\n        addTransaction(transactions.length+1, text, Number(amount))\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <h3>Add new transaction</h3>\r\n         <form onSubmit={newTransaction}>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)\r\n                    </label>\r\n                <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import './App.css';\n\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport  AddTransaction from './components/AddTransaction'\n\n// Context\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n\n      <Header />\n      \n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n\n    </GlobalProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}